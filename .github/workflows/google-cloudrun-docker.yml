name: Build Strapi and Deploy to Cloud Run

on:
  push:
    tags:
      - production/*
      - prod/*
      - development/*
      - dev/*
    branches:
      - chore/update-ci-workflow

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/prod') && 'production' || 'production' }}
    steps:
      - name: Setup variables
        id: vars
        run: |
          echo "docker__registry=${{ vars.GAR_LOCATION }}-docker.pkg.dev" >> $GITHUB_OUTPUT
          echo "docker__image=${{ vars.GAR_LOCATION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/cloud-run-source-deploy/${{ vars.SERVICE }}" >> $GITHUB_OUTPUT
    outputs:
      docker__registry: ${{ steps.vars.outputs.docker__registry }}
      docker__image: ${{ steps.vars.outputs.docker__image }}

  build:
    name: Build
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/prod') && 'production' || 'production' }}
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ needs.setup.outputs.docker__image }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.sha }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ needs.setup.outputs.docker__registry }}
          username: _json_key
          password: ${{ secrets.GCP_KEY }}

      - name: Build and push
        id: build_push
        uses: docker/build-push-action@v4
        with:
          cache-to: type=inline
          cache-from: type=registry,ref=${{ needs.setup.outputs.docker__image }}:latest
          tags: ${{ steps.meta.outputs.tags }}
          push: true

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/prod') && 'production' || 'production' }}
    needs: [setup, build]
    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_KEY }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy \
            --image ${{ needs.setup.outputs.docker__image }}:${{ github.sha }} \
            --region ${{ vars.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            ${{ vars.SERVICE }}
